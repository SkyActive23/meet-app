{"ast":null,"code":"import { mockData } from './mock-data';\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\n\nexport const extractLocations = events => {\n  var extractLocations = events.map(event => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\nexport const getEvents = async () => {\n  return mockData;\n};","map":{"version":3,"names":["mockData","extractLocations","events","map","event","location","locations","Set","getEvents"],"sources":["C:/Users/Sky/CareerFoundry/Full-Stack-Immersion/meet-app/src/api.js"],"sourcesContent":["import { mockData } from './mock-data';\r\n\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n export const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n  };\r\n\r\n  export const getEvents = async () => {\r\n    return mockData;\r\n  };"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,IAAY;EACzC,IAAID,gBAAgB,GAAGC,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACC,QAA5B,CAAvB;EACA,IAAIC,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQN,gBAAR,CAAJ,CAAhB;EACA,OAAOK,SAAP;AACD,CAJK;AAMN,OAAO,MAAME,SAAS,GAAG,YAAY;EACnC,OAAOR,QAAP;AACD,CAFM"},"metadata":{},"sourceType":"module"}