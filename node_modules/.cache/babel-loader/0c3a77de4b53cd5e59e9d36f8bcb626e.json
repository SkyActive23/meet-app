{"ast":null,"code":"import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\n\nexport const extractLocations = events => {\n  var extractLocations = events.map(event => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async accessToken => {\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`).then(res => res.json()).catch(error => error.json());\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://y77bi8kh3f.execute-api.us-west-1.amazonaws.com/dev/api/get-events/' + token;\n    const result = await axios.get(url);\n\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n\n    NProgress.done();\n    return result.data.events;\n  }\n};\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n\n    if (!code) {\n      const results = await axios.get(\"https://y77bi8kh3f.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\");\n      const {\n        authUrl\n      } = results.data;\n      return window.location.href = authUrl;\n    }\n\n    return code && getToken(code);\n  }\n\n  return accessToken;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async code => {\n  try {\n    const encodeCode = encodeURIComponent(code);\n    const response = await fetch('https://y77bi8kh3f.execute-api.us-west-1.amazonaws.com/dev/api/token/' + encodeCode);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const {\n      access_token\n    } = await response.json();\n    access_token && localStorage.setItem(\"access_token\", access_token);\n    return access_token;\n  } catch (error) {\n    error.json();\n  }\n};","map":{"version":3,"names":["mockData","axios","NProgress","extractLocations","events","map","event","location","locations","Set","checkToken","accessToken","result","fetch","then","res","json","catch","error","getEvents","start","window","href","startsWith","done","token","getAccessToken","removeQuery","url","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","response","ok","Error","status","access_token"],"sources":["C:/Users/Sky/CareerFoundry/Full-Stack-Immersion/meet-app/src/api.js"],"sourcesContent":["import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress'; \r\n\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n export const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n  };\r\n\r\n  const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n      .then((res) => res.json())\r\n      .catch((error) => error.json());\r\n  \r\n    return result;\r\n  };\r\n\r\n  export const getEvents = async () => {\r\n    NProgress.start();\r\n  \r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n      NProgress.done();\r\n      return mockData;\r\n    }\r\n  \r\n  \r\n    const token = await getAccessToken();\r\n  \r\n    if (token) {\r\n      removeQuery();\r\n      const url = 'https://y77bi8kh3f.execute-api.us-west-1.amazonaws.com/dev/api/get-events/' + token;\r\n      const result = await axios.get(url);\r\n      if (result.data) {\r\n        var locations = extractLocations(result.data.events);\r\n        localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n        localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n      }\r\n      NProgress.done();\r\n      return result.data.events;\r\n    }\r\n  };\r\n\r\n  export const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n      await localStorage.removeItem(\"access_token\");\r\n      const searchParams = new URLSearchParams(window.location.search);\r\n      const code = await searchParams.get(\"code\");\r\n      if (!code) {\r\n        const results = await axios.get(\r\n          \"https://y77bi8kh3f.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\r\n        );\r\n        const { authUrl } = results.data;\r\n        return (window.location.href = authUrl);\r\n      }\r\n      return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n  }\r\n\r\n  const removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n      var newurl =\r\n        window.location.protocol +\r\n        \"//\" +\r\n        window.location.host +\r\n        window.location.pathname;\r\n      window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n      newurl = window.location.protocol + \"//\" + window.location.host;\r\n      window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n  };\r\n\r\n  const getToken = async (code) => {\r\n    try {\r\n        const encodeCode = encodeURIComponent(code);\r\n\r\n        const response = await fetch( 'https://y77bi8kh3f.execute-api.us-west-1.amazonaws.com/dev/api/token/' + encodeCode);\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`)\r\n        }\r\n        const { access_token } = await response.json();\r\n        access_token && localStorage.setItem(\"access_token\", access_token);\r\n        return access_token;\r\n    } catch(error) {\r\n        error.json();\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}